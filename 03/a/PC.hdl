// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    //if reset==1 out=0
    Mux16(a=in,b=false,sel=reset,out=resetOut);

    //If reset==0 continue with value in the register from t-1
    Or(a=load,b=reset,out=orOut);
    Mux16(a=loop,b=resetOut,sel=orOut,out=regIn);
    
    //load current value into memory
    Or(a=orOut,b=inc,out=rload);
    Register(in=regIn,load=rload,out=regOut,out=out);
   
    //inc current val if required/loop the register val
    Inc16(in=regOut,out=incOut);
    Mux16(a=regOut,b=incOut,sel=inc,out=loop);
}
